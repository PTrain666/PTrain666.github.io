<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>go - 标签 - 北邙山之光的 Blog</title>
        <link>http://PTrain666.github.io/tags/go/</link>
        <description>go - 标签 - 北邙山之光的 Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 09 Jul 2018 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://PTrain666.github.io/tags/go/" rel="self" type="application/rss+xml" /><item>
    <title>function types</title>
    <link>http://PTrain666.github.io/posts/2018-07-09-function-types/</link>
    <pubDate>Mon, 09 Jul 2018 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2018-07-09-function-types/</guid>
    <description><![CDATA[<h2 id="function-types">function types</h2>
<blockquote>
<p>A function type denotes the set of all functions with the same parameter and result types.<br>
function 类型代表了一系列参数和返回值相同的类型</p>
</blockquote>]]></description>
</item><item>
    <title>go 的 map</title>
    <link>http://PTrain666.github.io/posts/2018-05-25-go-%E7%9A%84-map/</link>
    <pubDate>Fri, 25 May 2018 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2018-05-25-go-%E7%9A%84-map/</guid>
    <description><![CDATA[map 是无序的 golang 中的 map 的遍历顺序是不确定，每次遍历的顺序各不相同。 而 Java 中的 map 遍历时，每次遍历的结果的顺序是一致的。 golang 中的 map 也是一种散列表的形式，]]></description>
</item><item>
    <title>go 语言模板</title>
    <link>http://PTrain666.github.io/posts/2018-04-10-go-%E8%AF%AD%E8%A8%80%E6%A8%A1%E6%9D%BF/</link>
    <pubDate>Tue, 10 Apr 2018 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2018-04-10-go-%E8%AF%AD%E8%A8%80%E6%A8%A1%E6%9D%BF/</guid>
    <description><![CDATA[<h2 id="go-语言-template-总结">go 语言 Template 总结</h2>
<p>go 语言中的 template 使用{{ }}来作为一个标识符,可以在其中插入相应的 template 支持的代码块。template 是一个模板，他所以来的数据从外部传进来。</p>
<p>形如:</p>
<pre><code>tpl.Execute(buf, jObj.MustMap(make(map[string]interface{})))
</code></pre><p>tpl 就是我们的一个模板类，其中已经读取了我们存在本地的文件，Execute 方法传入了数据。</p>]]></description>
</item></channel>
</rss>
