<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>北邙山之光的 Blog</title>
        <link>http://PTrain666.github.io/</link>
        <description>北邙山之光的 Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 12 Mar 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="http://PTrain666.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>ReferenceQueue and Rumtime.gc()</title>
    <link>http://PTrain666.github.io/posts/ReferenceQueue-and-GC/</link>
    <pubDate>Fri, 12 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/ReferenceQueue-and-GC/</guid>
    <description><![CDATA[前言 内存泄漏对于日常简单的业务开发而言 很常见也不常见(如果你还是说 Handler 那一套的话，除非你使用 Handler 做 timer，否则 总有一个时间 会释放所谓的内部类]]></description>
</item><item>
    <title>Handler Looper MQ 的几个问题</title>
    <link>http://PTrain666.github.io/posts/Handler-Looper-MQ-%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 04 Mar 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/Handler-Looper-MQ-%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98/</guid>
    <description><![CDATA[前言 Handler、Looper、MessageQueue 是老生常谈的话题了，你可能会觉得没什么好讲的啊，网上文章也一堆。 这里我有几个问题问]]></description>
</item><item>
    <title>MMKV 和 mmap</title>
    <link>http://PTrain666.github.io/posts/MMKV-%E5%92%8C-mmap/</link>
    <pubDate>Fri, 26 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/MMKV-%E5%92%8C-mmap/</guid>
    <description><![CDATA[前言 最近看了点 MMKV 的代码，其核心就是通过 mmap 来读写文件。当然还有多进程、序列化、扩容重排 key等问题(这些随便找篇文章都有讲)。本文主要通过 mmap 实]]></description>
</item><item>
    <title>Bundle Parcel 和 ClassLoader</title>
    <link>http://PTrain666.github.io/posts/Bundle-Parcel-%E5%92%8C-ClassLoader/</link>
    <pubDate>Sat, 20 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/Bundle-Parcel-%E5%92%8C-ClassLoader/</guid>
    <description><![CDATA[前言 前几天看到同事在讨论 动态代理 和 类加载器 的一些问题，其实这些技术无论是客户端还是后端都已经用烂掉了。 动态代理 cglib 和 jdk.Proxy 基本是 Java 后端面试的 &ld]]></description>
</item><item>
    <title>DataBinding 解读</title>
    <link>http://PTrain666.github.io/posts/DataBinding-%E8%A7%A3%E8%AF%BB/</link>
    <pubDate>Thu, 11 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/DataBinding-%E8%A7%A3%E8%AF%BB/</guid>
    <description><![CDATA[前言 Android 的应用层架构，其实一直在缓慢的进步，但是 Android 开发工程师却很少有进步。比如我，直到 2021 年才开始使用 dataBinding。 我初步在 RecyclerView 的 item 中试]]></description>
</item><item>
    <title>工作中遇到的代码反例</title>
    <link>http://PTrain666.github.io/posts/2021-02-07-%E5%B7%A5%E4%BD%9C%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%8D%E4%BE%8B/</link>
    <pubDate>Sun, 07 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2021-02-07-%E5%B7%A5%E4%BD%9C%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%BB%A3%E7%A0%81%E5%8F%8D%E4%BE%8B/</guid>
    <description><![CDATA[前言 最近一直都是 copy 工程师和 scapegoat 工程师 不过也发现了一些些问题，也用来警示自己以后写代码 尽量 考虑全面(人无完人···) 反例1-下次进入 App，回到]]></description>
</item><item>
    <title>Java 泛型的见解</title>
    <link>http://PTrain666.github.io/posts/2021-02-01-Java-%E6%B3%9B%E5%9E%8B%E7%9A%84%E8%A7%81%E8%A7%A3/</link>
    <pubDate>Mon, 01 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2021-02-01-Java-%E6%B3%9B%E5%9E%8B%E7%9A%84%E8%A7%81%E8%A7%A3/</guid>
    <description><![CDATA[前言 写 RecyclerView 的 Adapter 时，感觉到了泛型理解不够深刻，也不够熟练，看了几天的泛型文档 https://docs.oracle.com/javase/tutorial/java/generics/index.html 下面的总结均是对于文档的学习和一些代码示例的运行。 为什么要使用泛型]]></description>
</item><item>
    <title>Kotlin Coroutines VS Goroutines</title>
    <link>http://PTrain666.github.io/posts/2021-01-24-Kotlin-Coroutines-VS-Goroutines/</link>
    <pubDate>Sun, 24 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2021-01-24-Kotlin-Coroutines-VS-Goroutines/</guid>
    <description><![CDATA[前言 最近一直在看 Kotlin 协程，因为以前也写过 Golang，所以试着去对比了一下，发现了很多好玩的事情。 两种协程的比较 一个 Kotlin 的小例子 试问下面一段代码]]></description>
</item><item>
    <title>Kotlin Scope Function</title>
    <link>http://PTrain666.github.io/posts/2021-01-22-Kotlin-Scope-Function/</link>
    <pubDate>Fri, 22 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2021-01-22-Kotlin-Scope-Function/</guid>
    <description><![CDATA[前言 经常看公司里的人写的一些基础库(基于 Kotlin)看不太懂，总有各种关键字和函数，不知道他们是在刻意用还是咋地，所以学一波，就从出现次数]]></description>
</item><item>
    <title>java 匿名内部类</title>
    <link>http://PTrain666.github.io/posts/2021-01-21-java-%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB/</link>
    <pubDate>Thu, 21 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>http://PTrain666.github.io/posts/2021-01-21-java-%E5%8C%BF%E5%90%8D%E5%86%85%E9%83%A8%E7%B1%BB/</guid>
    <description><![CDATA[最近看了一些程序语言的设计，语言的本质等等···接触到了一些神奇的名词，协变与逆变（Covariance and contravariance） 等等]]></description>
</item></channel>
</rss>
